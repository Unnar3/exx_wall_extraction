{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"inc",
				"inc	#include \"â€¦\""
			],
			[
				"gp",
				"gp3_Ksearch_"
			],
			[
				"gp3",
				"gp3_max_nearest_neighbours_"
			],
			[
				"gp3_",
				"gp3_min_angle_"
			],
			[
				"rw",
				"rw_hull_eps_"
			],
			[
				"hu",
				"hull_alpha_"
			],
			[
				"dis",
				"dist_thresh_"
			],
			[
				"max",
				"max_ite_"
			],
			[
				"sv_s",
				"sv_seed_res_"
			],
			[
				"voxel",
				"voxel_leaf_size_"
			],
			[
				"voxe",
				"voxel_leaf_size_"
			],
			[
				"V",
				"VOXEL_LEAF_SIZE"
			],
			[
				"bou",
				"boundaryIndexHigh"
			],
			[
				"std",
				"std::endl"
			],
			[
				"boundar",
				"boundary_points"
			],
			[
				"triang",
				"triangulation::angleBetweenVectors"
			],
			[
				"new",
				"new_cloud"
			],
			[
				"closes",
				"closestInternal"
			],
			[
				"super",
				"super_voxel_planes"
			],
			[
				"ge",
				"getCloudSize"
			],
			[
				"set",
				"setInputCloud"
			],
			[
				"Poi",
				"PointCloudT"
			],
			[
				"name",
				"namespace"
			],
			[
				"ind",
				"ind_loop"
			],
			[
				"Po",
				"PointCloudT"
			],
			[
				"Point",
				"PointCloudT"
			],
			[
				"leaf",
				"leaf_size"
			],
			[
				"Plana",
				"PlanarRegT"
			],
			[
				"Plan",
				"PlanarRegT"
			],
			[
				"exx",
				"exx_plane_extraction"
			],
			[
				"min",
				"min_inliers_"
			],
			[
				"dist",
				"distance_threshold_"
			],
			[
				"coe",
				"coeffs"
			],
			[
				"dista",
				"distance_threshold"
			],
			[
				"model",
				"ModelCoeffT"
			],
			[
				"cloud",
				"Cloud_triangle"
			],
			[
				"save",
				"savePCL"
			],
			[
				"cloud_",
				"cloud_triangle"
			],
			[
				"hull",
				"hulls"
			],
			[
				"P",
				"Ptr"
			],
			[
				"triangles",
				"triangles_planes"
			],
			[
				"pol",
				"Polygon"
			],
			[
				"tri",
				"triangles_planes"
			],
			[
				"file",
				"filenames"
			],
			[
				"Me",
				"METAROOM"
			],
			[
				"current",
				"currentPlane"
			],
			[
				"su",
				"super_voxel_planes"
			],
			[
				"number",
				"number_of_planes"
			],
			[
				"inliers",
				"inliers_vec"
			],
			[
				"inlier",
				"inliers_vec"
			],
			[
				"j_",
				"j_nextCheck"
			],
			[
				"j_ne",
				"j_nextCheck"
			],
			[
				"j",
				"j_nextCheck"
			],
			[
				"curre",
				"currentPlane"
			],
			[
				"next",
				"nextCheck"
			],
			[
				"ne",
				"nextCheck"
			],
			[
				"point",
				"pointToLineDistance"
			],
			[
				"CLOUD",
				"cloud_hull_plane"
			]
		]
	},
	"buffers":
	[
		{
			"file": "include/compression.cpp",
			"settings":
			{
				"buffer_size": 11123,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/plane_test.cpp",
			"settings":
			{
				"buffer_size": 3086,
				"line_ending": "Unix"
			}
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 733,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/plane_compression.cpp",
			"settings":
			{
				"buffer_size": 7190,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/compression.h",
			"settings":
			{
				"buffer_size": 4860,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 179.0,
		"selected_items":
		[
			[
				"push",
				"Git: Push"
			],
			[
				"comm",
				"Git: Quick Commit"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"qui",
				"Git: Quick Commit"
			],
			[
				"add",
				"Git: Add..."
			],
			[
				"Snippet: ",
				"Snippet: #!/usr/bin/env"
			],
			[
				"pac",
				"PackageResourceViewer: Open Resource"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"ad",
				"Git: Add..."
			],
			[
				"commi",
				"Git: Quick Commit"
			],
			[
				"com",
				"Git: Quick Commit"
			],
			[
				"q",
				"Git: Quick Commit"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"pa",
				"PackageResourceViewer: Extract Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"gutt",
				"GitGutter: Show Comparing Against"
			],
			[
				"gutter",
				"GitGutter: Compare Against Commit"
			]
		],
		"width": 601.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/unnar/catkin_ws/src/exx_wall_extraction",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/include",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/src"
	],
	"file_history":
	[
		"/home/unnar/.config/sublime-text-3/Packages/User/cout.sublime-snippet",
		"/home/unnar/.config/sublime-text-3/Packages/Color Scheme - Default/Monokai.tmTheme",
		"/home/unnar/catkin_ws/src/rosOgre/include/BaseApplication.h",
		"/home/unnar/catkin_ws/src/rosOgre/include/PCLfunctions/cloud_generation.h",
		"/home/unnar/catkin_ws/src/rosOgre/src/BaseApplication.cpp",
		"/home/unnar/catkin_ws/src/rosOgre/run_from/resources.cfg",
		"/home/unnar/catkin_ws/src/rosOgre/run_from/plugins.cfg",
		"/home/unnar/catkin_ws/src/rosOgre/run_from/Ogre.log",
		"/home/unnar/catkin_ws/src/rosOgre/include/triangulation/triangulation.h",
		"/home/unnar/catkin_ws/src/rosOgre/include/triangulation/triangulation.cpp",
		"/home/unnar/catkin_ws/src/rosOgre/include/TutorialApplication.h",
		"/home/unnar/catkin_ws/src/rosOgre/dist/media/models/ogrehead.mesh",
		"/home/unnar/catkin_ws/src/rosOgre/dist/media/materials/scripts/Ogre.material",
		"/home/unnar/catkin_ws/src/rosOgre/dist/bin/resources.cfg",
		"/home/unnar/catkin_ws/src/rosOgre/dist/bin/plugins.cfg",
		"/home/unnar/catkin_ws/src/rosOgre/dist/bin/ogre.cfg",
		"/home/unnar/catkin_ws/src/rosOgre/dist/bin/mesh.vtk",
		"/home/unnar/catkin_ws/src/rosOgre/dist/bin/Ogre.log",
		"/home/unnar/catkin_ws/src/rosOgre/package.xml",
		"/home/unnar/catkin_ws/src/rosOgre/README.md",
		"/home/unnar/catkin_ws/src/rosOgre/Ogre.log",
		"/home/unnar/catkin_ws/src/rosOgre/CMakeLists.txt",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/include/compression/plane_concave_hull.h",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/include/compression/cloud_triangulation.h",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/src/plane_compression.cpp",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/include/triangulation/triangulation.cpp",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/include/compression/cloud_filtering.h",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/include/compression/plane_extraction.h",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/include/compression/compress_methods.h",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/src/plane_test.cpp",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/include/compression/plane_compression_node.h",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/include/compression/plane_extraction_node.h",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/include/compression/filtering.h",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/include/exx_plane_extraction/compress_methods.h",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/include/exx_plane_extraction/plane_extraction.h",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/CMakeLists.txt",
		"/home/unnar/.config/sublime-text-3/Packages/Alignment/Default (Linux).sublime-keymap",
		"/home/unnar/.config/sublime-text-3/Packages/Alignment/Base File.sublime-settings",
		"/home/unnar/.config/sublime-text-3/Packages/Theme - Spacegray/Spacegray Eighties.sublime-theme",
		"/home/unnar/.config/sublime-text-3/Packages/Color Scheme - Default/LAZY.tmTheme",
		"/home/unnar/sublime.tmtheme",
		"/home/unnar/sublime-theme/sublime.sublime-theme",
		"/home/unnar/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/unnar/Desktop/base16-eighties.dark.tmTheme",
		"/home/unnar/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/unnar/.config/sublime-text-3/Packages/User/GitGutter.sublime-settings",
		"/home/unnar/.config/sublime-text-3/Packages/GitGutter/GitGutter.sublime-settings",
		"/home/unnar/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/src/clouds/mesh.vtk",
		"/media/unnar/Downloads/transmission-postprocess-manual.sh",
		"/usr/share/applications/viewer.desktop",
		"/home/unnar/.bash_aliases",
		"/home/unnar/bash_aliases",
		"/home/unnar/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/unnar/.bashrc",
		"/home/unnar/.bashcr",
		"/home/unnar/catkin_ws/src/exx_wall_extraction/.git/config",
		"/home/unnar/catkin_ws/src/beginner_tutorials/src/talker.cpp",
		"/home/unnar/catkin_ws/src/beginner_tutorials/src/listener.cpp",
		"/home/unnar/catkin_ws/src/beginner_tutorials/msg/Num.msg",
		"/home/unnar/catkin_ws/src/beginner_tutorials/package.xml",
		"/home/unnar/catkin_ws/src/beginner_tutorials/CMakeLists.txt"
	],
	"find":
	{
		"height": 30.0
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
			"/home/unnar/catkin_ws/src/rosOgre/include"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"triangulation",
			"triangles_planes",
			"Ogre::Real ",
			"std::cout",
			"printSelectedPoints",
			"std::cout",
			"base",
			"a_",
			"a",
			"Points[0]",
			"pointIdxNKNSearch",
			"11",
			"99",
			" 2 ",
			"2 ",
			"12",
			"15",
			"87",
			"88",
			"[i",
			"i",
			"ind_loop",
			"(i+1)*(j+1)-1",
			"i*j",
			"ogreManual",
			"SdkTrays",
			"SdkTrays.zip",
			"PROJECT_BINARY_DIR",
			"CMAKE_MODULE_PATH",
			"/OGRE/",
			"CONCAVEHULL_H",
			"CONCAVEHULL",
			"indices",
			"PLANEEXTRACTION_H",
			"PLANEEXTRACTION",
			"PointNCloudT",
			"leaf_size",
			"Eigen",
			" \n",
			"pcl::PointXYZ",
			"pcl::Normal",
			"pcl::PointCloud<PointT>",
			"new pcl::PointCloud<PointT> ",
			" pcl::PointCloud<PointT>",
			"pcl::PointCloud<PointT> ",
			"pcl::PointCloud<PointT>",
			" ());",
			"pcl::PointCloud<PointT> ",
			"pcl::PointCloud<PointT>",
			"57",
			"folder",
			"gitg",
			"number",
			"functio",
			"dasfÃ¦adslfkÃ¦alsdkf",
			"PointCloudT",
			"cloud",
			"compressed_extracted_planes",
			"compressed_extracted_projected_planes",
			"(*planes)[i]",
			"pcl::PointXYZ",
			"at",
			"x0x1.at",
			".at",
			"at",
			"x0x1.at",
			".at",
			"last",
			"cross",
			"nextCheck",
			"current",
			"PointT",
			"next",
			"PointT next",
			"PointT ",
			"sor",
			"        //sor",
			"//",
			"sor",
			"        //sor",
			"//",
			"pcl::io"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "include/compression.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11123,
						"regions":
						{
						},
						"selection":
						[
							[
								922,
								922
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3366.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/plane_test.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3086,
						"regions":
						{
						},
						"selection":
						[
							[
								456,
								456
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 733,
						"regions":
						{
						},
						"selection":
						[
							[
								481,
								481
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/plane_compression.cpp",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 7190,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 198.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "include/compression.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4860,
						"regions":
						{
						},
						"selection":
						[
							[
								1423,
								1423
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 528.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 54.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 74.0
	},
	"project": "exx.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/catkin_ws/src/rosOgre/rosOgre.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 206.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
